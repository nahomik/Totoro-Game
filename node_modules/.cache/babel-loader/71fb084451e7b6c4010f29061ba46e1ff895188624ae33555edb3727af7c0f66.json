{"ast":null,"code":"var _jsxFileName = \"/home/nahom/git/second/AuthenChain/src/App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx - Main application component for AuthenChain\n// Handles game logic, state management, and UI composition\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CardGrid from \"./components/CardGrid\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport Modal from \"./components/Modal\";\nimport customImages from \"./components/CustomImages\";\nimport shuffleArray from \"./utils/shuffleArray\";\nimport formatTime from \"./utils/formatTime\";\nimport useGameTimer from \"./hooks/useGameTimer\";\nimport { GHIBLI_API_URL } from \"./constants/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [gameTime, setGameTime] = useGameTimer(!loading && score > 0);\n  useEffect(() => {\n    setLoading(true);\n    fetch(GHIBLI_API_URL).then(response => response.json()).then(data => {\n      const selectedFilmIDs = Object.keys(customImages);\n      const filteredFilms = data.filter(film => selectedFilmIDs.includes(film.id)).map(film => ({\n        id: film.id,\n        title: film.title,\n        image: customImages[film.id]\n      }));\n      setCards(shuffleArray(filteredFilms));\n      setLoading(false);\n    }).catch(() => setLoading(false));\n  }, []);\n  function handleCardClick(id) {\n    if (selectedCards.includes(id)) {\n      setModalMessage(\"Game Over! Try Again.\");\n      setScore(0);\n      setSelectedCards([]);\n    } else {\n      const newScore = score + 1;\n      setScore(newScore);\n      setBestScore(Math.max(newScore, bestScore));\n      setSelectedCards([...selectedCards, id]);\n      if (newScore === cards.length) {\n        setModalMessage(\"You Won!\");\n      }\n    }\n    setCards(shuffleArray(cards));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/6/6e/Ghibli_logo.svg\",\n        alt: \"Ghibli Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AuthenChain Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\",\n      alt: \"Loading...\",\n      className: \"loading-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Scoreboard, {\n        score: score,\n        bestScore: bestScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n        cards: cards,\n        handleCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), modalMessage && /*#__PURE__*/_jsxDEV(Modal, {\n        message: modalMessage,\n        onClose: () => setModalMessage(\"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tj6MiNjyEyT8dK5CmEpcE5AO6OM=\", false, function () {\n  return [useGameTimer];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardGrid","Scoreboard","Modal","customImages","shuffleArray","formatTime","useGameTimer","GHIBLI_API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cards","setCards","score","setScore","bestScore","setBestScore","selectedCards","setSelectedCards","modalMessage","setModalMessage","loading","setLoading","gameTime","setGameTime","fetch","then","response","json","data","selectedFilmIDs","Object","keys","filteredFilms","filter","film","includes","id","map","title","image","catch","handleCardClick","newScore","Math","max","length","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","message","onClose","_c","$RefreshReg$"],"sources":["/home/nahom/git/second/AuthenChain/src/App.jsx"],"sourcesContent":["// App.jsx - Main application component for AuthenChain\n// Handles game logic, state management, and UI composition\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CardGrid from \"./components/CardGrid\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport Modal from \"./components/Modal\";\nimport customImages from \"./components/CustomImages\";\nimport shuffleArray from \"./utils/shuffleArray\";\nimport formatTime from \"./utils/formatTime\";\nimport useGameTimer from \"./hooks/useGameTimer\";\nimport { GHIBLI_API_URL } from \"./constants/api\";\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [gameTime, setGameTime] = useGameTimer(!loading && score > 0);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(GHIBLI_API_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        const selectedFilmIDs = Object.keys(customImages);\n        const filteredFilms = data\n          .filter((film) => selectedFilmIDs.includes(film.id))\n          .map((film) => ({\n            id: film.id,\n            title: film.title,\n            image: customImages[film.id],\n          }));\n        setCards(shuffleArray(filteredFilms));\n        setLoading(false);\n      })\n      .catch(() => setLoading(false));\n  }, []);\n\n  function handleCardClick(id) {\n    if (selectedCards.includes(id)) {\n      setModalMessage(\"Game Over! Try Again.\");\n      setScore(0);\n      setSelectedCards([]);\n    } else {\n      const newScore = score + 1;\n      setScore(newScore);\n      setBestScore(Math.max(newScore, bestScore));\n      setSelectedCards([...selectedCards, id]);\n      if (newScore === cards.length) {\n        setModalMessage(\"You Won!\");\n      }\n    }\n    setCards(shuffleArray(cards));\n  }\n\n  return (\n    <div className=\"app-container\">\n      <header>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6e/Ghibli_logo.svg\" alt=\"Ghibli Logo\" className=\"logo\" />\n        <h1>AuthenChain Memory Game</h1>\n      </header>\n      {loading ? (\n        <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"Loading...\" className=\"loading-image\" />\n      ) : (\n        <>\n          <Scoreboard score={score} bestScore={bestScore} />\n          <CardGrid cards={cards} handleCardClick={handleCardClick} />\n          {modalMessage && (\n            <Modal message={modalMessage} onClose={() => setModalMessage(\"\")} />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}